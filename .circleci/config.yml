# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# Use a package of configuration called an orb.
commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

jobs:
  
  save_hello_world_output:   
          # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:17.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - run: echo "text to output here" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:   
            # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
      # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
      docker:
        - image: cimg/node:17.0
      # Add steps to the job
      # See: https://circleci.com/docs/2.0/configuration-reference/#steps
      steps:
        - attach_workspace:
            at: ~/
        - run: cat ~/output.txt
  print_CID:   
            # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
      # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
      docker:
        - image: cimg/node:17.0
      # Add steps to the job
      # See: https://circleci.com/docs/2.0/configuration-reference/#steps
      steps:
        - print_pipeline_id
  build:
    docker:
      - image: cimg/node:17.0
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_ENV_VAR  
      - run: exit 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail                
                 
        
workflows:
  my_workflow:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires: 
            - save_hello_world_output
      - print_CID 
      - build     
